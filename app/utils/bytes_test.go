package utils_test

import (
	"github/com/codecrafters-io/sqlite-starter-go/app/utils"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestReadTwosComplement(t *testing.T) {
	testCases := []struct {
		bytes    []byte
		expected int64
	}{
		{[]byte{0xFF}, -1},
		{[]byte{0x01}, 1},
		{[]byte{0x7F}, 127},

		{[]byte{0xFF, 0xFE}, -2},
		{[]byte{0x00, 0x02}, 2},

		{[]byte{0xFF, 0xFF, 0xFE}, -2},
		{[]byte{0x00, 0x00, 0x02}, 2},

		{[]byte{0xFF, 0xFF, 0xFF, 0xFE}, -2},
		{[]byte{0x00, 0x00, 0x00, 0x02}, 2},

		{[]byte{0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE}, -2},
		{[]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x02}, 2},

		{[]byte{0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE}, -2},
		{[]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02}, 2},
	}

	for _, tc := range testCases {
		val := utils.ReadTwosComplement(tc.bytes)
		assert.Equal(t, tc.expected, val)
	}
}
